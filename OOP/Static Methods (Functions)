//Static Functions can be called at class level without a need to have an object.

/*
Static Functions can not be called through object.
False, static Functions cann be called through objects and class too.
*/

//Static Functions can be called through any object as well as through the class itself.

/*
If you have a static function, can you access a non-static members of the class from inside that function?
No, Static methods can only access static members , because static methods can be called at class level
without objects, and non static members you cannot access them without having object first.
*/


#include <iostream>
using namespace std;

class clsA
{
public:
	static int Function1()
	{
		return 10;
	}

	int Function2()
	{
		return 20;
	}
};

int main()
{
	//The following line calls static function directly via class not through the object
	//At class level you can call only static methods and static members
	cout << clsA::Function1() << endl;
	
	//static methods can also be called throught the object.
	clsA A1, A2;
	
	cout << A1.Function1() << endl;
	cout << A1.Function2() << endl;
	cout << A2.Function1() << endl;
}
